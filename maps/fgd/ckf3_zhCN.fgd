// ------------------------------------------------------------------------------
// CKF 3 游戏定义文件 (.fgd)
// 版本号: 0.0.0.7
// 最后更新标识: 2019年11月29日 由 yuxuanchiadm
// 支持:
//   地图编辑器 Worldcraft 3.3, Hammer 3.4 - 3.5beta4 (部分效果在 Hammer 3.5 中才能显示)
//   编译程序 ZHLT 各版本 (部分键值只在特定版本 ZHLT 有效)
//   游戏 Chicken Fortress 3
// -------------------------------------------------------------------------------
//
// 声明:
//   可以任意发布修改版,如发布修改版请务必在发布说明中包含完整作者信息及本声明.
//
// 作者信息:
// 版本 0.0.0.1 修改者 hzqst (113660872@qq.com)
// 版本 0.0.0.2 修改者 stay (344233108@qq.com)
// 版本 0.0.0.3 修改者 hzqst (113660872@qq.com)
// 版本 0.0.0.4 修改者 yuxuanchiadm (yuxuanchiadm@126.com)
// 版本 0.0.0.5 修改者 yuxuanchiadm (yuxuanchiadm@126.com)
// 版本 0.0.0.6 修改者 yuxuanchiadm (yuxuanchiadm@126.com)
// 版本 0.0.0.7 修改者 yuxuanchiadm (yuxuanchiadm@126.com)
// -----------------------------------------------------------------------
//
//   为保持fgd兼容性,不要做不必要的细微修改.
//   fgd文件命名: "ckf3_<语言>.fgd".
//
// -----------------------------------------------------------------------
// 更新历史(详见文本最后
// 2019年11月29日 - yuxuanchiadm (0.0.0.7)
// 2019年11月27日 - yuxuanchiadm (0.0.0.6)
// 2018年5月26日 - yuxuanchiadm (0.0.0.5)
// 2016年5月28日 - yuxuanchiadm (0.0.0.4)
// 2015年6月3日 - hzqst (0.0.0.3)
// 2015年5月24日 - stay (0.0.0.2)
// 2010年12月25日 - hzqst (0.0.0.1)
//
// --------------------------------------------------------------------------------

//
// 在此设置各类实体的颜色
//

@BaseClass color(0 255 0) = color_player []
@BaseClass color(64 128 0) = color_cs []
@BaseClass color(255 255 0) = color_light []
@BaseClass color(255 255 255) = color_env []
@BaseClass color(192 192 192) = color_wall []
@BaseClass color(64 64 64) = color_point []
@BaseClass color(255 128 0) = color_door []
@BaseClass color(192 64 0) = color_effect []
@BaseClass color(255 32 0) = color_func []
@BaseClass color(255 0 0) = color_compile []
@BaseClass color(255 0 128) = color_trigger []
@BaseClass color(255 64 128) = color_game []

//
// BaseClasses
//

@BaseClass = Targetname 
[
	targetname(target_source) : "名称"
]

@BaseClass = Global 
[
//-	globalname(string) : "全局实体名称" 
]

@BaseClass = Target 
[
	target(target_destination) : "目标" 
]

@BaseClass = Angles
[
	angles(choices) : "实体角度 (倾斜 旋转 滚动)" : "0 0 0" =
	[
		"-90 0 0" : "-90 0 0 (向上)"
		"90 0 0" : "90 0 0 (向下)"
	]
]

@BaseClass = Appearflags
[
	spawnflags(Flags) =
	[
		2048 : "死亡模式中禁用" : 0
	]
]

@BaseClass = Effects
[
	effects(choices) : "实体效果 (数字可相加)": "" =
	[
		"" : "无"
		1 : "1 (粒子漩涡)"
		2 : "2 (枪口火焰)"
		4 : "4 (强光)"
		8 : "8 (弱光)"
		16 : "16 (假定环境光线向上)"
		32 : "32 (不插入下一帧)"
		64 : "64 (发光图标)"
		128 : "128 (不可见/无网络传输)"
	]
]

@BaseClass = RenderFields 
[
	rendermode(choices) : "渲染模式" : "" =
	[
		"": "普通0 - 无光"
		//*   For BSP objects, the object will be rendered as a pure area of whatever
		//* color is specified in FX Color.
		//*   For models and sprites, this is the same as Normal mode.
		//* 含有透明部分的mdl不要使用这个渲染模式,否则有时会导致后面物体消失.

		1: "纯颜色1 (仅固体实体)"
		//*   For BSP objects, the object will be rendered without shadows.
		//*   For models and sprites, this is the same as Normal mode, except that the Pulse
		//* renderfx settings work.

		2: "纹理2 - 微光(全亮)"
		//*   Like additive, but as the player gets further from the sprite, it gets
		//* progressively larger and more transparent. The sprite is also not obscured by
		//* intervening models, which can sometimes look bad.
		//*   Alphatest sprites won't use their masks in this mode.

		3: "发光3 (仅图标动画)"
		//*   For BSP objects, this only affects textures beginning with {. Blue pixels
		//*   will be transparent; non-blue pixels will be solid.
		//*   For models, this mode is the same as Normal mode.
		//*   For sprites, this mode is for displaying sprites in Indexalpha mode - i.e.
		//* the palette positions are used as opacity settings; 0 for fully transparent,
		//* and 255 for fully opaque, regardless of what the palette colors actually are.
		//* The only palette colour that will be used is the last one, which sets the
		//* colour for the whole sprite. (Needless to say, this will look odd unless the
		//* sprite is designed to be displayed this way!)
		//*   Oddly, Alphatest sprites won't use their masks in this mode.

		4: "固体4 - 无光"
		//*   Only bright parts of the object are visible; darker parts are just more
		//* transparent, and black is not drawn. Useful for making lighting or hologram
		//* effects.

		5: "附加5"
	]

	renderfx(choices) : "渲染效果" : "" =
	[
		"": "普通 (0)"
		//* Additive or Texture mode only.
		1: "脉冲 缓慢 (1)"
		//* Additive or Texture mode only.
		2: "脉冲 快速 (2)"
		//* Additive or Texture mode only.
		3: "脉冲 缓慢大范围 (3)"
		//* Additive or Texture mode only.
		4: "脉冲 快速大范围 (4)"
		9: "滤波 缓慢 (9)"
		10: "滤波 快速 (10)"
		11: "滤波 极快 (11)"
		12: "闪烁 缓慢 (12)"
		13: "闪烁 快速 (13)"
//*These don't seem to do anything. Correct me if I'm wrong... 
//*		5: "Slow Fade Away"
//*		6: "Fast Fade Away"
//*		7: "Slow Become Solid"
//*		8: "Fast Become Solid"
//* Constant Glow only affects the Glow rendermode. With this setting, Glow mode behaves
//* exactly like Additive mode - except that (as is usual for Glow mode) the sprite isn't
//* obscured by intervening sprites or models. (Hmm. Call me slow, but..... how is this
//* useful?)
		14: "恒定的发光模式 (14)"
		15: "扭曲 (仅模型) (15)"
		16: "扭曲+渐隐 (16)"
//* Strange effect. As seen, briefly, when a Gargantua dies.
		19: "发光外壳(仅模型)(19)"
	]

	renderamt(integer) : "透明度 (0-255 0=完全透明)" : 255
	//* 当渲染效果为19时,透明度决定发光外壳的厚度.

	rendercolor(color255) : "渲染色 (R G B)" : ""
	//* 当使用滚动纹理(纹理名称scroll开头)时,渲染色决定滚动速度:
	//* R是速度值的符号,R=0为正,R=1为负,
	//* G是速度值的高位,G每增加1,速度增加16单位,
	//* B是速度值的低位,B每增加1,速度增加1/16单位.
]

// LRCHLT Texture light additions
// these will only work with advanced compiling tools that allow 
// switchable texture lighting.  note that lighting used by
// moveable entitys may be left behind!
//
@BaseClass = TexLightType
[
	style(choices) : "纹理发光样式" : "" =
	[
		"" : "普通"
		-3: "捆绑到同名光源"
		10: "闪烁的荧光"
		2 : "脉冲 缓慢 强大"
		11: "脉冲 缓慢"
		5 : "脉冲 温和"
		1 : "闪烁 A"
		6 : "闪烁 B"
		3 : "烛光 A"
		7 : "烛光 B"
		8 : "烛光 C"
		4 : "滤波 快速"
		9 : "滤波 缓慢"
		12: "水下光线"
	]
]

@BaseClass = Minlight
[
	_minlight(string) : "最小灯光等级 (0.0-2.0)"
]

@BaseClass = ZHLT
[
	zhlt_invisible(choices) : "(ZHLT)不可见" : "" =
	[
		"": "否"
		1: "是"
	]
	zhlt_noclip(choices) : "(ZHLT)不与玩家接触(可穿过)" : "" =
	[
		"": "否"
		1: "是"
	]
	zhlt_lightflags(choices) : "(ZHLT)光影选项" : "" =
	[
		"": "普通"
		2: "不透明 (产生阴影)"
		10: "不透明 + 透明纹理修正"
	]
	zhlt_customshadow(color1) : "(ZHLT)自定义阴影"
	light_origin(string) : "(ZHLT)光影编译移动轴心目标"
]

@BaseClass base(RenderFields, Effects, TexLightType, ZHLT, Minlight) = SolidVisible
[
]

@BaseClass = SolidInvisible
[
	zhlt_invisible(choices) : "(ZHLT)不可见的固体实体" : 1 =
	[
		1: "是"
	]
	zhlt_noclip(choices) : "(ZHLT)不与玩家接触" : "" =
	[
		"": "否"
		1: "是"
	]
]

//* Don't create a light whose name begins with "light" - a bug/feature in RAD means
//* that such a light won't be able to switch on and off.
@BaseClass = Light 
[
	_light(color255) : "光线 (颜色和亮度)" : "255 255 255 100"
	//* This field will have no effect on a dynamic (i.e. named) light.
	style(Choices) : "光线样式 (实体无名称时)" : "" =
	[
		"" : "普通"
		10: "闪烁的荧光"
		2 : "脉冲 缓慢强大"
		11: "脉冲 缓慢"
		5 : "脉冲 温和"
		1 : "闪烁 A"
		6 : "闪烁 B"
		3 : "烛光 A"
		7 : "烛光 B"
		8 : "烛光 C"
		4 : "滤波 快速"
		9 : "滤波 缓慢"
		12 : "水下光线"
	]
	//* This field will have no effect on a static (i.e. nameless) light.
	//*   'a' is dark, 'm' is normal brightness, 'z' is full brightness.
	//* There's no support for a light to have a custom appearances when it's in a
	//* state other than 'on'. See trigger_lightstyle if you need this effect.
	pattern(string) : "自定义样式(a-z) (实体有名称时)"
	_fade(string) : "光线衰减速度 (仅ZHLT)" : ""
	_falloff(Choices) : "光线衰减模式 (仅ZHLT)" : "" =
	[
		"" : "默认"
		1 : "线性"
		2 : "平方"
	]
	spawnflags(Flags) =
	[
		1 : "开始时关闭" : 0
	]
]

//
// CKF3
//

@SolidClass base(color_cs) base(Targetname, SolidInvisible, Appearflags) = func_resupplyroom : "Resupply room" 
[
	team(choices) : "队伍" : 0 =
	[
		0: "双方"
		1: "红队"
		2: "蓝队"
	]
]

@SolidClass base(color_cs) base(Targetname, SolidInvisible, Appearflags) = func_resupplycase : "Resupply case" 
[
	team(choices) : "队伍" : 0 =
	[
		0: "双方"
		1: "红队"
		2: "蓝队"
	]
	subentity(string) : "绑定外观实体" : ""
]

@SolidClass base(color_cs) base(Targetname, SolidInvisible, Appearflags) = func_controlpoint : "Control Point" 
[
	team(choices) : "队伍" : 0 =
	[
		0: "双方"
		1: "红队"
		2: "蓝队"
	]
	capname(string) : "控制点名" : ""
	caprate(string) : "占领速度(/s)" : "0"
	trigonredcap(string) : "红队占领后引发" : ""
	trigonblucap(string) : "蓝队占领后引发" : ""
	trigoncap(string) : "占领后引发" : ""
	subentity(string) : "绑定外观实体" : ""
	hudpos(integer) : "HUD图标位置(0~5)" : 2
	timeadded(string) : "增加回合时间" : ""
	locked(choices) : "回合开始时锁定" : 0 =
	[
		0: "否"
		1: "是"
	]
	disabled(choices) : "回合开始时禁用" : 0 =
	[
		0: "否"
		1: "是"
	]
]

@SolidClass base(color_wall) base(Targetname, Global, SolidVisible) = func_nobuildzone : "No Buildable Zone" 
[
	team(choices) : "队伍" : 0 =
	[
		0: "双方"
		1: "红队"
		2: "蓝队"
	]
	spawnflags(flags) =
	[
		1 : "开始时关闭" : 0
	]
]

@PointClass base(color_trigger) base(Targetname, Target, Appearflags) iconsprite("sprites/CS/TriggerChangetarget.spr") = trigger_cplocker : "Control Point Locker"
[
	lockstate(choices) : "设定方式" : 0 = 
	[
		0 : "切换"
		1 : "锁定"
		2 : "解锁"
	]
]

@PointClass base(color_trigger) base(Targetname, Target, Appearflags) iconsprite("sprites/CS/TriggerChangetarget.spr") = trigger_roundterminator : "Round Terminator"
[
	winstatus(choices) : "胜利方" : 0 = 
	[
		0 : "平局"
		1 : "红队"
		2 : "蓝队"
	]
	endtime(integer) : "自定义回合结束时间" : 0
]

// all items will respawn after a short period in a multiplayer game.
//* 物品重生时间为30秒

@PointClass base(color_func) size(-16 -16 0, 16 16 16) base(Targetname, Angles, RenderFields, Effects, Appearflags) Studio("models/CKF_III/w_health.mdl")= item_healthbox : "Health Box" 
[
	givehealth(string) : "*给予生命(%)" : "0"
	type(Choices) : "类型" : "" = 
	[
		"0" : "小"
		"1" : "中"
		"2" : "大"
	]
]

@PointClass base(color_func) size(-16 -16 0, 16 16 16) base(Targetname, Angles, RenderFields, Effects, Appearflags) Studio("models/CKF_III/w_ammo.mdl") = item_ammobox : "Ammo Box" 
[
 	giveammo(string) : "*给予弹药(%)" : "0"
	type(Choices) : "类型" : "" = 
	[
		"0" : "小"
		"1" : "中"
		"2" : "大"
	]
]

@PointClass base(color_light) iconsprite("sprites/CS/lightbulb.spr") base(Targetname, Target, Angles, Light, Appearflags) = shadow_manager : "Shadow Manager" [
	pitch(integer) : "倾斜 (-90=向下 90=向上)" : -90
	radius(integer) : "距离" : 100
	fardist(integer) : "淡出距离" : 50
	scale(integer) : "贴图缩放" : 16
	texsize(integer) : "贴图尺寸" : 512
	affectmodel(string) : "影响模型" : ""
]

@SolidClass base(color_func) base(Appearflags) = sky_box : "3D SkyBox Zone" [
]

@PointClass base(color_trigger) base(Appearflags) = sky_camera : "3DSky Camera" [
]

@PointClass base(color_trigger) base(Appearflags) = sky_center : "3DSky World Center" [
]

@PointClass base(color_game) base(Targetname, Appearflags) iconsprite("sprites/CS/MapParams.spr") = info_map_settings : "CKF3 GameRules Settings"
[
	setupcondition(choices)  : "开局状态" : 0 =
	[
		0: "正常(默认)"
		1: "准备阶段"
		2: "结束阶段"
		3: "超时阶段"
		4: "等待玩家"
	]
	endaction(choices)  : "回合时间耗尽时动作" : 1 =
	[
		0: "无动作(默认)"
		1: "平局"
		2: "红队胜利"
		3: "蓝队胜利"
		4: "进入加时赛(暂不可用)"
	]
	reddominatedaction(choices)  : "红队主宰时的动作" : 2 =
	[
		0: "无动作(默认)"
		1: "平局"
		2: "红队胜利"
		3: "蓝队胜利"
		4: "进入加时赛(暂不可用)"
	]
	bludominatedaction(choices)  : "蓝队主宰时的动作" : 3 =
	[
		0: "无动作(默认)"
		1: "平局"
		2: "红队胜利"
		3: "蓝队胜利"
		4: "进入加时赛(暂不可用)"
	]
	waittime(integer) : "等待玩家时间(秒)" : 30
	freezetime(integer) : "开局冻结时间(秒)" : 3
	setuptime(integer) : "准备阶段时间(秒)" : 60
	roundtime(integer) : "回合时间(秒)" : 300
	endtime(integer) : "结束等待时间(秒)" : 15
]

@SolidClass base(color_wall) base(Targetname, Global, SolidVisible, Appearflags) = func_wall : "Wall" 
[
	team(choices) : "队伍" : 0 =
	[
		0: "双方"
		1: "红队"
		2: "蓝队"
	]
]
